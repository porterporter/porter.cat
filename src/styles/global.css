@import 'tailwindcss';
/* @plugin '@tailwindcss/typography'; */

:root {
	--background: #0a0a0a;
	--foreground: #ededed;
}

@theme inline {
	--color-background: var(--background);
	--color-foreground: var(--foreground);
}

body {
	background: var(--background);
	color: var(--foreground);
}

.heading {
	text-decoration: none;
	font-weight: inherit;
	&:hover {
		text-decoration: none;
	}
}

@layer base {
	.prose {
		font-size: 1rem;
		:where(p) {
			margin-bottom: 1.25em;
		}
		:where(a) {
			text-decoration: underline;
			font-weight: 500;
		}
		:where(strong) {
			font-weight: 600;
		}
		:where(a strong) {
			color: inherit;
		}
		:where(blockquote strong) {
			color: inherit;
		}
		:where(thead th strong) {
			color: inherit;
		}
		:where(ol) {
			list-style-type: decimal;
			margin-top: 1.25em;
			margin-bottom: 1.25em;
			padding-inline-start: 1.625em;
		}
		:where(ul) {
			list-style-type: disc;
			margin-top: 1.25em;
			margin-bottom: 1.25em;
			padding-inline-start: 1.625em;
		}
		:where(ol > li)::marker {
			font-weight: 400;
		}
		:where(dt) {
			font-weight: 600;
			margin-top: 1.25em;
		}
		:where(hr) {
			border-top-width: 1;
			margin-top: 3em;
			margin-bottom: 3em;
		}
		:where(blockquote) {
			font-weight: 500;
			font-style: italic;
			border-inline-start-width: 0.25rem /* 4px */;
			border-inline-start-color: var(--tw-prose-quote-borders);
			quotes: '\201C''\201D''\2018''\2019';
			margin-top: 1.6em;
			margin-bottom: 1.6em;
			padding-inline-start: 1em;
		}
		:where(blockquote p:first-of-type)::before {
			content: open-quote;
		}
		:where(blockquote p:last-of-type)::after {
			content: close-quote;
		}
		:where(h1) {
			font-weight: 800;
			font-size: 2.25em;
			margin-top: 0;
			margin-bottom: 0.25em;
			line-height: 1.1111111;
		}
		:where(h1 strong) {
			font-weight: 900;
			color: inherit;
		}
		:where(h2) {
			font-weight: 700;
			font-size: 1.5em;
			margin-bottom: 0.25em;
			line-height: 1.3333333;
		}
		:where(h2 strong) {
			font-weight: 800;
			color: inherit;
		}
		:where(h3) {
			font-weight: 600;
			font-size: 1.25em;
			margin-bottom: 0.25em;
			line-height: 1.6;
		}
		:where(h3 strong) {
			font-weight: 700;
			color: inherit;
		}
		:where(h4) {
			font-weight: 600;
			margin-top: 1.5em;
			margin-bottom: 0.5em;
			line-height: 1.5;
		}
		:where(h4 strong) {
			font-weight: 700;
			color: inherit;
		}
		:where(img) {
			margin-top: 1em;
			margin-bottom: 1em;
			max-width: 24rem;
			width: 100%;
		}
		:where(picture) {
			display: block;
			margin-top: 2em;
			margin-bottom: 2em;
		}
		:where(video) {
			margin-top: 2em;
			margin-bottom: 2em;
		}
		:where(kbd) {
			font-weight: 500;
			font-family: inherit;
			color: var(--tw-prose-kbd);
			box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
				0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
			font-size: 0.875em;
			border-radius: 0.3125rem /* 5px */;
			padding-top: 0.1875em;
			padding-inline-end: 0.375em;
			padding-bottom: 0.1875em;
			padding-inline-start: 0.375em;
		}
		:where(code) {
			color: var(--tw-prose-code);
			font-weight: 600;
			font-size: 0.875em;
		}
		:where(code)::before {
			content: '`';
		}
		:where(code)::after {
			content: '`';
		}
		:where(a code) {
			color: inherit;
		}
		:where(h1 code) {
			color: inherit;
		}
		:where(h2 code) {
			color: inherit;
			font-size: 0.875em;
		}
		:where(h3 code) {
			color: inherit;
			font-size: 0.9em;
		}
		:where(h4 code) {
			color: inherit;
		}
		:where(blockquote code) {
			color: inherit;
		}
		:where(pre) {
			overflow-x: auto;
			font-weight: 400;
			font-size: 0.875em;
			line-height: 1.7142857;
			margin-top: 1.7142857em;
			margin-bottom: 1.7142857em;
			border-radius: 0.375rem /* 6px */;
			padding-top: 0.8571429em;
			padding-inline-end: 1.1428571em;
			padding-bottom: 0.8571429em;
			padding-inline-start: 1.1428571em;
		}
		:where(pre code) {
			background-color: transparent;
			border-width: 0;
			border-radius: 0;
			padding: 0;
			font-weight: inherit;
			color: inherit;
			font-size: inherit;
			font-family: inherit;
			line-height: inherit;
		}
		:where(pre code)::before {
			content: none;
		}
		:where(pre code)::after {
			content: none;
		}
		:where(figure > *) {
			margin-top: 0;
			margin-bottom: 0;
		}
		:where(figcaption) {
			color: var(--tw-prose-captions);
			font-size: 0.875em;
			line-height: 1.4285714;
			margin-top: 0.8571429em;
		}
		line-height: 1.75;
		:where(picture > img) {
			margin-top: 0;
			margin-bottom: 0;
		}
		:where(li) {
			margin-top: 0.5em;
			margin-bottom: 0.5em;
		}
		:where(ol > li) {
			padding-inline-start: 0.375em;
		}
		:where(ul > li) {
			padding-inline-start: 0.375em;
		}
		:where(.prose > ul > li p) {
			margin-top: 0.75em;
			margin-bottom: 0.75em;
		}
		:where(.prose > ul > li > p:first-child) {
			margin-top: 1.25em;
		}
		:where(.prose > ul > li > p:last-child) {
			margin-bottom: 1.25em;
		}
		:where(.prose > ol > li > p:first-child) {
			margin-top: 1.25em;
		}
		:where(.prose > ol > li > p:last-child) {
			margin-bottom: 1.25em;
		}
		:where(ul ul, ul ol, ol ul, ol ol) {
			margin-top: 0.75em;
			margin-bottom: 0.75em;
		}
		:where(hr + *) {
			margin-top: 0;
		}
		:where(h2 + *) {
			margin-top: 0;
		}
		:where(h3 + *) {
			margin-top: 0;
		}
		:where(h4 + *) {
			margin-top: 0;
		}
		:where(figure) {
			margin-top: 2em;
			margin-bottom: 2em;
		}
		:where(.prose > :first-child) {
			margin-top: 0;
		}
		:where(.prose > :last-child) {
			margin-bottom: 0;
		}
		:where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			width: 100%;
			table-layout: auto;
			margin-top: 2em;
			margin-bottom: 2em;
			font-size: 0.875em;
			line-height: 1.7142857;
		}
		:where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			border-bottom-width: 1px;
			border-bottom-color: var(--tw-prose-th-borders);
		}
		:where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			color: var(--tw-prose-headings);
			font-weight: 600;
			vertical-align: bottom;
			padding-inline-end: 0.5714286em;
			padding-bottom: 0.5714286em;
			padding-inline-start: 0.5714286em;
		}
		:where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			border-bottom-width: 1px;
			border-bottom-color: var(--tw-prose-td-borders);
		}
		:where(tbody tr:last-child):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			border-bottom-width: 0;
		}
		:where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			vertical-align: baseline;
		}
		:where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			border-top-width: 1px;
			border-top-color: var(--tw-prose-th-borders);
		}
		:where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			vertical-align: top;
		}
		:where(th, td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
			text-align: start;
		}

		:where(thead th:first-child):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			padding-inline-start: 0;
		}
		:where(thead th:last-child):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			padding-inline-end: 0;
		}
		:where(tbody td, tfoot td):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			padding-top: 0.5714286em;
			padding-inline-end: 0.5714286em;
			padding-bottom: 0.5714286em;
			padding-inline-start: 0.5714286em;
		}
		:where(tbody td:first-child, tfoot td:first-child):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			padding-inline-start: 0;
		}
		:where(tbody td:last-child, tfoot td:last-child):not(
				:where([class~='not-prose'], [class~='not-prose'] *)
			) {
			padding-inline-end: 0;
		}
		:where(td:has(img), th:has(img)) {
			height: auto;
			min-width: 50%;
		}
		/* Style for vertical alignment in table cells */
		:where(td:not(:has(img)), th:not(:has(img))) {
			max-width: 50%;
			vertical-align: middle; /* Aligns content to the middle of the cell */
		}
	}
}

/* .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-lead);
        font-size: 1.25em;
        line-height: 1.6;
        margin-top: 1.2em;
        margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-links);
        text-decoration: underline;
        font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-bold);
        font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        list-style-type: disc;
        margin-top: 1.25em;
        margin-bottom: 1.25em;
        padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        font-weight: 400;
        color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
        color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-color: var(--tw-prose-hr);
        border-top-width: 1;
        margin-top: 3em;
        margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-style: italic;
        color: var(--tw-prose-quotes);
        border-inline-start-width: 0.25rem;
        border-inline-start-color: var(--tw-prose-quote-borders);
        quotes: "\201C""\201D""\2018""\2019";
        margin-top: 1.6em;
        margin-bottom: 1.6em;
        padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 800;
        font-size: 2.25em;
        margin-top: 0;
        margin-bottom: 0.8888889em;
        line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 900;
        color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 700;
        font-size: 1.5em;
        margin-top: 2em;
        margin-bottom: 1em;
        line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 800;
        color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        font-size: 1.25em;
        margin-top: 1.6em;
        margin-bottom: 0.6em;
        line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        margin-top: 1.5em;
        margin-bottom: 0.5em;
        line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 700;
        color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        display: block;
        margin-top: 2em;
        margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        font-weight: 500;
        font-family: inherit;
        color: var(--tw-prose-kbd);
        box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
        font-size: 0.875em;
        border-radius: 0.3125rem;
        padding-top: 0.1875em;
        padding-inline-end: 0.375em;
        padding-bottom: 0.1875em;
        padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-code);
        font-weight: 600;
        font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
        font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-pre-code);
        background-color: var(--tw-prose-pre-bg);
        overflow-x: auto;
        font-weight: 400;
        font-size: 0.875em;
        line-height: 1.7142857;
        margin-top: 1.7142857em;
        margin-bottom: 1.7142857em;
        border-radius: 0.375rem;
        padding-top: 0.8571429em;
        padding-inline-end: 1.1428571em;
        padding-bottom: 0.8571429em;
        padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        background-color: transparent;
        border-width: 0;
        border-radius: 0;
        padding: 0;
        font-weight: inherit;
        color: inherit;
        font-size: inherit;
        font-family: inherit;
        line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
        content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
        content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        width: 100%;
        table-layout: auto;
        margin-top: 2em;
        margin-bottom: 2em;
        font-size: 0.875em;
        line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-headings);
        font-weight: 600;
        vertical-align: bottom;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 1px;
        border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        border-top-width: 1px;
        border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        color: var(--tw-prose-captions);
        font-size: 0.875em;
        line-height: 1.4285714;
        margin-top: 0.8571429em;
    }
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
        margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0.5em;
        padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-top: 0.5714286em;
        padding-inline-end: 0.5714286em;
        padding-bottom: 0.5714286em;
        padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 2em;
        margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
        margin-bottom: 0;
    }
} */
